iceo definitionSituation: 'colorée'.iceo definitionQualite: #couleur situation: (absolu getSituation: #colorée).iceo definitionSituation: 'palette de couleurs'.iceo definitionQualite: #bleu situation: (absolu getSituation: 'palette de couleurs') genus: ((absolu getSituation: #colorée) get: #couleur).iceo definitionQualite: #vert situation: (absolu getSituation: 'palette de couleurs') genus: ((absolu getSituation: #colorée) get: #couleur).iceo definitionQualite: #rouge situation: (absolu getSituation: 'palette de couleurs') genus:  ((absolu getSituation: #colorée) get: #couleur).iceo definitionQualite: #cyan situation: (absolu getSituation: 'palette de couleurs') genus:  ((absolu getSituation: #colorée) get: #couleur).iceo definitionQualite: #magenta situation: (absolu getSituation: 'palette de couleurs') genus:  ((absolu getSituation: #colorée) get: #couleur).iceo definitionQualite: #jaune situation: (absolu getSituation: 'palette de couleurs') genus:  ((absolu getSituation: #colorée) get: #couleur).iceo definitionQualite: #blanc situation: (absolu getSituation: 'palette de couleurs') genus:  ((absolu getSituation: #colorée) get: #couleur).iceo definitionQualite: #noir situation: (absolu getSituation: 'palette de couleurs') genus:  ((absolu getSituation: #colorée) get: #couleur).iceo definition: #torche.iceo definition: #objet.iceo definition: #lumière.lumière referenceEssence: lumière.torche referenceEssence: lumière.objet peutEtre: ((absolu getSituation: #colorée) get: #couleur).iceo soit: 'une palette de couleurs' situationGenerique: (absolu getSituation: 'palette de couleurs').iceo soit: 'lumière bleu' essence: lumière.iceo soit: 'lumière vert' essence: lumière.iceo soit: 'lumière rouge' essence: lumière.iceo soit: 'lumière cyan' essence: lumière.iceo soit: 'lumière magenta' essence: lumière.iceo soit: 'lumière jaune' essence: lumière.iceo soit: 'lumière blanc' essence: lumière.iceo soit: 'lumière noir' essence: lumière.(monde get: 'lumière bleu') addEtat: ((absolu getSituation: 'palette de couleurs') getElement: #bleu) dansSituation: (monde get: 'une palette de couleurs').(monde get: 'lumière bleu')  referenceEtre: (monde get: 'lumière bleu').(monde get: 'lumière vert') addEtat: ((absolu getSituation: 'palette de couleurs') getElement: #vert) dansSituation: (monde get: 'une palette de couleurs').(monde get: 'lumière vert')  referenceEtre: (monde get: 'lumière vert').(monde get: 'lumière rouge') addEtat: ((absolu getSituation: 'palette de couleurs') getElement: #rouge) dansSituation: (monde get: 'une palette de couleurs').(monde get: 'lumière rouge')  referenceEtre: (monde get: 'lumière rouge'). (monde get: 'lumière cyan') addEtat: ((absolu getSituation: 'palette de couleurs') getElement: #cyan) dansSituation: (monde get: 'une palette de couleurs').(monde get: 'lumière cyan')  referenceEtre: (monde get: 'lumière bleu'). (monde get: 'lumière cyan')  referenceEtre: (monde get: 'lumière vert'). (monde get: 'lumière magenta') addEtat: ((absolu getSituation: 'palette de couleurs') getElement: #magenta) dansSituation: (monde get: 'une palette de couleurs').(monde get: 'lumière magenta')  referenceEtre: (monde get: 'lumière bleu'). (monde get: 'lumière magenta')  referenceEtre: (monde get: 'lumière rouge') .(monde get: 'lumière jaune') addEtat: ((absolu getSituation: 'palette de couleurs') getElement: #jaune) dansSituation: (monde get: 'une palette de couleurs').(monde get: 'lumière jaune')  referenceEtre: (monde get: 'lumière rouge'). (monde get: 'lumière jaune')  referenceEtre: (monde get: 'lumière vert'). (monde get: 'lumière blanc') addEtat: ((absolu getSituation: 'palette de couleurs') getElement: #blanc) dansSituation: (monde get: 'une palette de couleurs').(monde get: 'lumière blanc')  referenceEtre: (monde get: 'lumière bleu').(monde get: 'lumière blanc')  referenceEtre: (monde get: 'lumière rouge'). (monde get: 'lumière blanc')  referenceEtre: (monde get: 'lumière vert'). (monde get: 'lumière noir') addEtat: ((absolu getSituation: 'palette de couleurs') getElement: #noir) dansSituation: (monde get: 'une palette de couleurs').iceo soit: 'Une torche' essence: torche.(monde get: 'Une torche') referenceEtre: (monde get: 'lumière bleu').iceo soit: 'Un objet' essence: objet.(monde get: 'Un objet') addEtat: ((absolu getSituation: 'palette de couleurs') getElement: #jaune) dansSituation: (monde get: 'une palette de couleurs').objet compile:  'couleurApparenteEclairePar: uneTorche dans: uneSituation 	^ ((uneSituation getElementsEssence: lumière)		detect: [:each | each getEtresAttributs				= ((uneSituation get: ''lumière '' , ((uneSituation get: ''Un objet'') getEtats  at: 1) getNom) getEtresAttributs 					intersection: (uneTorche getEtresAttributs at: 1) getEtresAttributs)]) getEtats at: 1'				"(monde get: 'Un objet')  couleurApparenteEclairePar: (monde get: 'Une torche') dans: monde "